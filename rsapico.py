#import rsa
from sympy import mod_inverse
from gmpy2 import iroot
# from Crypto.Util.number import long_to_bytes
# from Crypto.PublicKey import RSA
import math

# e = 3
def gcd(a, b):
  while b:
    a, b = b, a % b
  return a

def lcm(a):
    ans = 1
    for i in a:
        ans = ans*i//gcd(ans,i)
    return ans

def powmod(bs,ex,md):
    if ex == 1:
        return bs % md
    elif ex % 2 == 0:
        return powmod((bs*bs)%md,ex//2,md)
    else:
        return bs*powmod((bs*bs)%md,(ex-1)//2,md) % md


# ns = [8815769761,6315400919,6256161797]
# ps = [94603,81203,79999]
# qs = [93187,77773,78203]
#
# pt = 1815907181716474805136452061793917684000871911998851410864797078911161933431337632774829806207517001958179617856720738101327521552576351369691667910371502971480153619360010341709624631317220940851114914911751279825748
#
# realn = 29129463609326322559521123136222078780585451208149138547799121083622333250646678767769126248182207478527881025116332742616201890576280859777513414460842754045651093593251726785499360828237897586278068419875517543013545369871704159718105354690802726645710699029936754265654381929650494383622583174075805797766685192325859982797796060391271817578087472948205626257717479858369754502615173773514087437504532994142632207906501079835037052797306690891600559321673928943158514646572885986881016569647357891598545880304236145548059520898133142087545369179876065657214225826997676844000054327141666320553082128424707948750331
#
# qq = 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559
#
# pp = 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637

# for i in range(0,3):
#     mygcd = gcd(ns[i], realn)
#     if mygcd != 1:
#         print(i,k)

# print(gcd(realn,faken))
# ct = powmod(pt,e,realn)
# print(ct)

# dd = mod_inverse(65537,(pp-1)*(qq-1))
# print(dd)

# p = 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433
# ct = 313988037963374298820978547334691775209030794488153797919908078268748481143989264914905339615142922814128844328634563572589348152033399603422391976806881268233227257794938078078328711322137471700521343697410517378556947578179313088971194144321604618116160929667545497531855177496472117286033893354292910116962836092382600437895778451279347150269487601855438439995904578842465409043702035314087803621608887259671021452664437398875243519136039772309162874333619819693154364159330510837267059503793075233800618970190874388025990206963764588045741047395830966876247164745591863323438401959588889139372816750244127256609
# e = 65537
# n = 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239
#
#
# q = n//p
# #print(q)
# d = mod_inverse(e,(p-1)*(q-1))
# phi = (p-1)*(q-1)
# plain = pow(ct,d,n)
# print(plain)

# n =  374159235470172130988938196520880526947952521620932362050308663243595788308583992120881359365258949723819911758198013202644666489247987314025169670926273213367237020188587742716017314320191350666762541039238241984934473188656610615918474673963331992408750047451253205158436452814354564283003696666945950908549197175404580533132142111356931324330631843602412540295482841975783884766801266552337129105407869020730226041538750535628619717708838029286366761470986056335230171148734027536820544543251801093230809186222940806718221638845816521738601843083746103374974120575519418797642878012234163709518203946599836959811
# e = 3
#
# ct =  2205316413931134031046440767620541984801091216351222789180535786851451917462804449135087209259828503848304180574549372616172217553002988241140344023060716738565104171296716554122734607654513009667720334889869007276287692856645210293194853
#
# print(pow(ct,1/3))
# pt,exact = iroot(ct,3)
# print(pt)

# ct = 5957070448238119461109948753792459627451267888982409639700972940000764711969677
# n = 13078482897922190774294823899359097834437531417503015404486234336503902084392279
# e = 65537
#
# p = 97600182914625073789287125275283262127
# q = 134000598230051289559332434751455065135577
#
# d = mod_inverse(e,(p-1)*(q-1))
# pt = pow(ct,d,n)
# print(pow(pt,e,n)-ct)

#supersafe 2
# c = 79395068663825464397167797787786813725057798805621592318993521211916656942457415319863767282347340949901069141822930848762074721488030505835011772067641893311030747716644310158145520892453256137997426155054915634272836332694419314083021526679767803619659469590422417661465691719519851315802194380521212454663
#
# n = 125328395155278975815620921292545775698504667112459934088575293457353519147508618854544178627509043694088854048892276406392559656583797100359003596175163967363113921468927368030794898990498992439105134070357530795735870785404249390274859837930697872897441226926678131920215915412431730708568295393574839460873
#
# e = 1505003997546493644306173078676679211357296992805681800016918015028719953142336131323165060650466414197292035590250111110226962627698068541168131440100310124504852017285346507651618875459693980744363204373347939683186251661229109838245740033112715227436618977365112578537828880564718237578454488952260712961
#
# pt = pow(c,65537,n)
# print(pow(pt,e,n)-c)


#supersafe 3
ct = 17621461207036793543708520294759019280834529260717327442291038651995010935558180748386990093168516231746183995573525291676038662156938540258273716216151586671546067680423380291219346060215254399645973257812253593596473146617871951574053858759075978426074250914356434973589339212163170716093826324255072330
n = 86438106588929939935030665784533843407782880278989930991956481233061795560772705738812092542524406832832868686299740137687020684217884058404300336277676996199295890082810402976663725039839202973985816579251964894802765367827321231511783226114401677410922214146407442137785864197083174797596772801234577891
e = 65537
# p1 = 2273171683
# p2 = 2473736053
# p3 = 3164795989
# p4 = 3222638623
# p5 = 3351334307
# p6 = 3359885687
# p7 = 3585321449
# p8 = 3641136503
# p9 = 3716155427
# p10 = 3848287507
# p11 = 3925653679
# p12 = 4149611357
ps = [2273171683,2473736053,3164795989,3222638623,3351334307,3359885687,3585321449,3641136503,3716155427,3848287507,3925653679,4149611357,2546587139,3491304863,4281888187,2856597509,3374377397,4000149451,2424501557,3216074287,3405337967,4205992001,4055419129,3423142757,3104144213,4278446659,4071959341,3840321053,3830992433,2151813187,3740527801,3019868119]

phi = 1
for i in ps:
    phi = phi * (i-1)
# ntest = 1
# for i in ps:
#     ntest = ntest * i
# print(ntest-n)
d = mod_inverse(e,phi)
pt = pow(ct,d,n)
print(pt)
diff = pow(pt,e,n)-ct
print(diff)
# print(pow(97987987982,e*d,n))

# m = 10
# p = 7
# q = 13
# p1 = 17
# n = p*q*p1 #1547
# phi = (p1)*(q-1)*(p1-1) #1152
# e = 5
# d = mod_inverse(e,phi)
# print(d)
# ct = pow(m,e,n)
# print(ct)
# pt = pow(ct,d,n)
# print(pt)
# print(pow(pt,e,n))
#
# print(pow(123,e*d,n))

# a = 19
# while a >= 0:
#     #print(a)
#     nval = n[a]
#     pval = ps[a]
#     qval = q[a]
#     phi = (pval-1)*(qval-1)
#     #print(phi)
#     d = mod_inverse(e, phi)
#
#     key = RSA.construct((nval, e, d, pval, qval))
#     flag = key.decrypt(flag)
#     a-=1
#
# print(long_to_bytes(flag))
